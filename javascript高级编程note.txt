element.normalize();这个方法能够把内部元素的节点合并成一个节点
element.firstChlid;获取元素的文本节点
element.firstChild.nodeType;节点类型
element.firstChild.nodeName;节点名称
element.firstChild.parent;是一个元素
element.firstChild.appendData(text);将text添加到节点的末尾
element.firstChild.deleteData(offset, count);从offset指定的位置删除count个节点
element.firstChild.insetData(offset, text);从offset指定的位置插入text
element.firstChild.replaceData(offset, count, text);人offset处删除到count文本并替换成text
element.firstChild.splitText(offset);从offset指定的位置将当前文本切割成几个元素 
element.firstChild.substringData(offset, count);从offset提到count个文本字符串


comment 注释节点
	节点类型为 8 因其无法通过类名与ID名称查找 可以通过赢遍厉所有的元素来查找注释点节
	属性有nodType nodeName nodeValue parentNode


节点 
	document
	nodeType的值为10;
	nodeName的值为doctype的名称;
	nodeValue的值为null;
	parentNode是document;

节点documentFragment
	nodeType的值为11；
	nodeName的值为"#document-fragment";
	nodeValue的值为null
	parentNode的值为null;
	子节点可以是element,processingInstruction, comment, text, CDATASection, EntityReference

	var fragment = document.createDocumentFragment();
	可以保存需要添加到文档中的节点;

	例：
		var fragment = document.createDocumentFragment();
	var ul = document.createElement("ul");
	var ulT = document.createTextNode("sfaasf");
	var li = document.createElement("li");
	var liT = document.createTextNode("asfsd");
	ul.appendChild(ulT);
	ul.appendChild(li);
	li.appendChild(liT);
	fragment.appendChild(ul);
	document.body.appendChild(fragment);

节点attr 
	nodeType的值为11;
	nodeName的值是特性的名称;
	nodeValue的值是特性的值;
	parentNode的值为null;
	
	Attr有三个属性name value specified
	name 是nodeName value是nodeValue
	var attr = document.createAttribute("align");
	attr.value = "left";
	element.setAttributeNode(attr);
	element.attributes['align'].value;
	element.getAttributeNode['align'].value;
	element.getAttribute("align" )


动态的创建脚本
	function loadScript(url){
		var script = document.createElement("script");
		script.type = "text/javascript";
		script.src = url;
		document.body.appendChild(script);
	}
